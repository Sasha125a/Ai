from http.server import HTTPServer, BaseHTTPRequestHandler
import json
import sys

class AIHandler(BaseHTTPRequestHandler):
    
    def do_GET(self):
        print(f"üîç GET –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω: {self.path}")
        
        if self.path == '/':
            self.send_response(200)
            self.send_header('Content-type', 'text/html; charset=utf-8')
            self.end_headers()
            
            html = '''
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <title>–ò–ò –ß–∞—Ç</title>
                <style>
                    body { 
                        font-family: Arial, sans-serif; 
                        max-width: 600px; 
                        margin: 0 auto; 
                        padding: 20px; 
                        background: #f5f5f5;
                    }
                    .chat-container {
                        background: white;
                        border-radius: 10px;
                        padding: 20px;
                        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    }
                    #chat {
                        height: 400px;
                        border: 1px solid #ddd;
                        border-radius: 5px;
                        padding: 10px;
                        margin-bottom: 10px;
                        overflow-y: auto;
                        background: #fafafa;
                    }
                    .message {
                        margin: 10px 0;
                        padding: 10px;
                        border-radius: 10px;
                        max-width: 80%;
                    }
                    .user {
                        background: #007bff;
                        color: white;
                        margin-left: auto;
                        text-align: right;
                    }
                    .ai {
                        background: #e9ecef;
                        color: black;
                    }
                    .input-area {
                        display: flex;
                        gap: 10px;
                    }
                    #messageInput {
                        flex: 1;
                        padding: 12px;
                        border: 2px solid #ddd;
                        border-radius: 25px;
                        font-size: 16px;
                    }
                    #messageInput:focus {
                        outline: none;
                        border-color: #007bff;
                    }
                    button {
                        padding: 12px 24px;
                        background: #007bff;
                        color: white;
                        border: none;
                        border-radius: 25px;
                        cursor: pointer;
                        font-size: 16px;
                    }
                    button:hover {
                        background: #0056b3;
                    }
                    .status {
                        margin-top: 10px;
                        padding: 10px;
                        border-radius: 5px;
                        text-align: center;
                    }
                    .success { background: #d4edda; color: #155724; }
                    .error { background: #f8d7da; color: #721c24; }
                </style>
            </head>
            <body>
                <div class="chat-container">
                    <h1>üí¨ –ò–ò –ß–∞—Ç –ø–æ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é</h1>
                    
                    <div id="chat">
                        <div class="message ai">
                            <strong>ü§ñ –ò–ò –ø–æ–º–æ—â–Ω–∏–∫:</strong><br>
                            –ü—Ä–∏–≤–µ—Ç! –Ø –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏.
                            –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –û—Ç–ø—Ä–∞–≤–∏—Ç—å!
                        </div>
                    </div>
                    
                    <div class="input-area">
                        <input type="text" id="messageInput" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å...">
                        <button onclick="sendMessage()">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
                    </div>
                    
                    <div id="status"></div>
                </div>

                <script>
                    function showStatus(message, type) {
                        const status = document.getElementById('status');
                        status.innerHTML = '<div class="status ' + type + '">' + message + '</div>';
                        setTimeout(() => status.innerHTML = '', 3000);
                    }

                    function addMessage(text, isUser) {
                        const chat = document.getElementById('chat');
                        const message = document.createElement('div');
                        message.className = isUser ? 'message user' : 'message ai';
                        
                        if (isUser) {
                            message.innerHTML = '<strong>üë§ –í—ã:</strong><br>' + text;
                        } else {
                            message.innerHTML = '<strong>ü§ñ –ò–ò:</strong><br>' + text;
                        }
                        
                        chat.appendChild(message);
                        chat.scrollTop = chat.scrollHeight;
                    }

                    async function sendMessage() {
                        const input = document.getElementById('messageInput');
                        const message = input.value.trim();
                        
                        if (!message) {
                            showStatus('–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!', 'error');
                            return;
                        }
                        
                        // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
                        input.value = '';
                        
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ä–∞–∑—É
                        addMessage(message, true);
                        showStatus('–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è...', 'success');
                        
                        try {
                            console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é POST –∑–∞–ø—Ä–æ—Å –Ω–∞ /chat');
                            
                            const response = await fetch('/chat', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({message: message})
                            });
                            
                            console.log('üì® –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, —Å—Ç–∞—Ç—É—Å:', response.status);
                            
                            if (!response.ok) {
                                throw new Error('HTTP error ' + response.status);
                            }
                            
                            const data = await response.json();
                            console.log('üìù –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);
                            
                            addMessage(data.response, false);
                            showStatus('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!', 'success');
                            
                        } catch (error) {
                            console.error('‚ùå –û—à–∏–±–∫–∞:', error);
                            addMessage('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º', false);
                            showStatus('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è', 'error');
                        }
                    }

                    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ Enter
                    document.getElementById('messageInput').addEventListener('keypress', function(e) {
                        if (e.key === 'Enter') {
                            sendMessage();
                        }
                    });

                    // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
                    document.getElementById('messageInput').focus();
                    
                    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, —Å–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç');
                </script>
            </body>
            </html>
            '''
            self.wfile.write(html.encode('utf-8'))
        else:
            self.send_error(404, "Not Found")
    
    def do_POST(self):
        print(f"üì® POST –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω –Ω–∞: {self.path}")
        print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(self.headers)}")
        
        if self.path == '/chat':
            try:
                # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                content_length = int(self.headers['Content-Length'])
                post_data = self.rfile.read(content_length)
                print(f"üìä –ü–æ–ª—É—á–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö: {content_length} –±–∞–π—Ç")
                
                data = json.loads(post_data.decode('utf-8'))
                message = data.get('message', '')
                
                print(f"üí¨ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{message}'")
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                response_text = self.generate_response(message)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
                self.send_response(200)
                self.send_header('Content-type', 'application/json; charset=utf-8')
                self.send_header('Access-Control-Allow-Origin', '*')
                self.send_header('Access-Control-Allow-Methods', 'POST, GET, OPTIONS')
                self.send_header('Access-Control-Allow-Headers', 'Content-Type')
                self.end_headers()
                
                response_data = json.dumps({"response": response_text}, ensure_ascii=False)
                print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –æ—Ç–≤–µ—Ç: {response_data}")
                self.wfile.write(response_data.encode('utf-8'))
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
                self.send_error(500, f"Internal Server Error: {str(e)}")
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—É—Ç—å: {self.path}")
            self.send_error(404, "Not Found")
    
    def do_OPTIONS(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ CORS preflight –∑–∞–ø—Ä–æ—Å–æ–≤"""
        self.send_response(200)
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'POST, GET, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        self.end_headers()
    
    def generate_response(self, message):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ò–ò"""
        message_lower = message.lower()
        
        if any(word in message_lower for word in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', 'hello']):
            return "–ü—Ä–∏–≤–µ—Ç! üëã –Ø –ò–ò –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é. –°–ø—Ä–æ—Å–∏ –º–µ–Ω—è –æ Python, JavaScript, HTML, –∞–ª–≥–æ—Ä–∏—Ç–º–∞—Ö –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Ç–µ–º–∞—Ö!"
        
        elif any(word in message_lower for word in ['python', '–ø–∏—Ç–æ–Ω']):
            return "Python - –æ—Ç–ª–∏—á–Ω—ã–π —è–∑—ã–∫ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö! üêç\n‚Ä¢ –ü—Ä–æ—Å—Ç–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å\n‚Ä¢ –ú–Ω–æ–≥–æ –±–∏–±–ª–∏–æ—Ç–µ–∫\n‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤–µ–±–∞, –¥–∞–Ω–Ω—ã—Ö, AI\n‚Ä¢ –û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ"
        
        elif any(word in message_lower for word in ['javascript', 'js']):
            return "JavaScript - —è–∑—ã–∫ –¥–ª—è –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü! üìú\n‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ\n‚Ä¢ –ú–Ω–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤ (React, Vue)\n‚Ä¢ –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (Node.js)"
        
        elif any(word in message_lower for word in ['html']):
            return "HTML - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü! üåê\n‚Ä¢ –¢–µ–≥–∏: <div>, <p>, <h1>\n‚Ä¢ –°–µ–º–∞–Ω—Ç–∏–∫–∞ –≤–∞–∂–Ω–∞\n‚Ä¢ –û—Å–Ω–æ–≤–∞ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        
        elif any(word in message_lower for word in ['–ø–æ–º–æ—â—å', 'help']):
            return "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Å:\n‚Ä¢ Python, JavaScript, HTML/CSS\n‚Ä¢ –ê–ª–≥–æ—Ä–∏—Ç–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö\n‚Ä¢ –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\n‚Ä¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞\n\n–ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–µ–º–µ! üí°"
        
        else:
            return f"–í—ã —Å–ø—Ä–æ—Å–∏–ª–∏: '{message}'\n\n–Ø –µ—â—ë —É—á—É—Å—å, –Ω–æ –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ:\n‚Ä¢ –Ø–∑—ã–∫–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è\n‚Ä¢ –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n‚Ä¢ –ê–ª–≥–æ—Ä–∏—Ç–º–∞—Ö\n‚Ä¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ-–¥—Ä—É–≥–æ–º—É! üöÄ"
    
    def log_message(self, format, *args):
        """–ö–∞—Å—Ç–æ–º–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        print(f"üåê {format % args}")

if __name__ == '__main__':
    HOST = '0.0.0.0'  # –¢–µ–ø–µ—Ä—å —Å–ª—É—à–∞–µ–º –≤—Å–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
    PORT = 8000
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –ò–ò –ß–∞—Ç–∞...")
    print(f"üìç –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å–∞–º:")
    print(f"   ‚Ä¢ http://localhost:{PORT}")
    print(f"   ‚Ä¢ http://127.0.0.1:{PORT}")
    print(f"   ‚Ä¢ http://–≤–∞—à-ip-–∞–¥—Ä–µ—Å:{PORT}")
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –ª—é–±–æ–π –±—Ä–∞—É–∑–µ—Ä")
    print("2. –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å: http://localhost:8000")
    print("3. –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'")
    print("4. –°–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏ –≤ —ç—Ç–æ–π –∫–æ–Ω—Å–æ–ª–∏")
    print("\"–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏\"")
    
    try:
        server = HTTPServer((HOST, PORT), AIHandler)
        print(f"\n‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ {HOST}:{PORT}")
        server.serve_forever()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        print("–í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ä—Ç 8000 —É–∂–µ –∑–∞–Ω—è—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç:")
        print("python app.py 8080")
    except KeyboardInterrupt:
        print("\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
