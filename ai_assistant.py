from http.server import HTTPServer, BaseHTTPRequestHandler
import json

class AIHandler(BaseHTTPRequestHandler):
    
    def do_GET(self):
        print(f"üîç GET –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω: {self.path}")
        
        if self.path == '/':
            self.send_response(200)
            self.send_header('Content-type', 'text/html')
            self.end_headers()
            
            html = '''
            <!DOCTYPE html>
            <html>
            <head>
                <title>–ò–ò –ß–∞—Ç</title>
                <style>
                    body { font-family: Arial; margin: 20px; }
                    .message { margin: 10px 0; padding: 10px; border-radius: 5px; }
                    .user { background: blue; color: white; }
                    .ai { background: gray; color: white; }
                    input, button { padding: 10px; margin: 5px; }
                </style>
            </head>
            <body>
                <h1>üí¨ –¢–µ—Å—Ç–æ–≤—ã–π –ò–ò –ß–∞—Ç</h1>
                <div id="chat"></div>
                <input type="text" id="message" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ">
                <button onclick="sendMessage()">–û–¢–ü–†–ê–í–ò–¢–¨</button>
                
                <script>
                    function sendMessage() {
                        const input = document.getElementById('message');
                        const message = input.value;
                        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ:', message);
                        
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ä–∞–∑—É
                        const chat = document.getElementById('chat');
                        chat.innerHTML += '<div class="message user">–í—ã: ' + message + '</div>';
                        input.value = '';
                        
                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                        fetch('/chat', {
                            method: 'POST',
                            headers: {'Content-Type': 'application/json'},
                            body: JSON.stringify({message: message})
                        })
                        .then(response => {
                            console.log('üì® –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, —Å—Ç–∞—Ç—É—Å:', response.status);
                            return response.json();
                        })
                        .then(data => {
                            console.log('üìù –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);
                            chat.innerHTML += '<div class="message ai">–ò–ò: ' + data.response + '</div>';
                        })
                        .catch(error => {
                            console.error('‚ùå –û—à–∏–±–∫–∞:', error);
                            chat.innerHTML += '<div class="message ai">–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è</div>';
                        });
                    }
                    
                    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ Enter
                    document.getElementById('message').addEventListener('keypress', function(e) {
                        if (e.key === 'Enter') sendMessage();
                    });
                </script>
            </body>
            </html>
            '''
            self.wfile.write(html.encode())
        else:
            self.send_error(404, "Not Found")
    
    def do_POST(self):
        print(f"üì® POST –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω: {self.path}")
        
        if self.path == '/chat':
            try:
                # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                content_length = int(self.headers['Content-Length'])
                post_data = self.rfile.read(content_length)
                data = json.loads(post_data.decode())
                message = data.get('message', '')
                
                print(f"üí¨ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{message}'")
                
                # –ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç
                response_text = f"–ü—Ä–∏–≤–µ—Ç! –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: '{message}'. –Ø —Ä–∞–±–æ—Ç–∞—é!"
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
                self.send_response(200)
                self.send_header('Content-type', 'application/json')
                self.send_header('Access-Control-Allow-Origin', '*')
                self.end_headers()
                
                response_data = json.dumps({"response": response_text})
                print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –æ—Ç–≤–µ—Ç: {response_data}")
                self.wfile.write(response_data.encode())
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
                self.send_error(500, "Internal Server Error")
        else:
            self.send_error(404, "Not Found")
    
    def log_message(self, format, *args):
        # –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        pass

if __name__ == '__main__':
    port = 8000
    server = HTTPServer(('localhost', port), AIHandler)
    print(f"üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:{port}")
    print("üîç –û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("üí¨ –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –û–¢–ü–†–ê–í–ò–¢–¨")
    print("üìä –í –∫–æ–Ω—Å–æ–ª–∏ Python –±—É–¥—É—Ç –≤–∏–¥–Ω—ã –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã")
    
    try:
        server.serve_forever()
    except KeyboardInterrupt:
        print("\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
